<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a5d7ac98-7de7-4c82-8cba-4257a0509d81" created="3.10.1" activeEnvironment="Default environment" name="Setup_and_Teardown_scripte_Activity" updated="3.10.1 2021-10-13T15:50:30Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="fa4e344d-5c06-4a95-9edb-6a71cb1f2e27" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://petstore.swagger.io" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>https://petstore.swagger.io</con:endpoint>
    </con:endpoints>
    <con:resource name="Pet" path="/v2/pet/{petID}" id="da6825b8-6822-4e0a-a3ad-2e26c319e398">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>petID</con:name>
          <con:style>TEMPLATE</con:style>
        </con:parameter>
      </con:parameters>
      <con:method name="Pet" id="c5dd6a71-f79b-409c-b711-8d47b35e50f4" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:pet="https://petstore.swagger.io/v2/pet">pet:Response</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="657dfb88-a709-4f79-b74e-86dc9ef16bc2" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://petstore.swagger.io</con:endpoint>
          <con:request>{
    "id": "${#petID}",
    "category": {
        "id": 0,
        "name": "string"
    },
    "name": "${#petName}",
    "photoUrls": [
        "string"
    ],
    "tags": [{
        "id": 0,
        "name": "string"
    }],
    "status": "available"
}</con:request>
          <con:originalUri>https://petstore.swagger.io/v2/pet</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>petID</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
      <con:method name="Method 2" id="7fa855d3-ea8c-4c7d-990d-efef98dfc50e" method="DELETE">
        <con:settings/>
        <con:parameters/>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="f785dcf9-629e-46db-9c4f-8a3b0a3149dd" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://petstore.swagger.io</con:endpoint>
          <con:request/>
          <con:originalUri>https://petstore.swagger.io/v2/pet/0</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="petID" value="0"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>petID</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="e802cb88-eea5-4bdb-8fe7-6980efde4535" name="https://petstore.swagger.io Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="47baaddd-92b1-4508-9fa6-47ffa7771563" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="https://petstore.swagger.io Test Case 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="Request 1" id="f7cfdc13-ad12-403c-a84d-39766a2bf229">
        <con:settings/>
        <con:config service="https://petstore.swagger.io" resourcePath="/v2/pet/{petID}" methodName="Pet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="657dfb88-a709-4f79-b74e-86dc9ef16bc2" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://petstore.swagger.io</con:endpoint>
            <con:request>{
    "id": "${#petID}",
    "category": {
        "id": 0,
        "name": "string"
    },
    "name": "${#petName}",
    "photoUrls": [
        "string"
    ],
    "tags": [{
        "id": 0,
        "name": "string"
    }],
    "status": "available"
}</con:request>
            <con:originalUri>https://petstore.swagger.io/v2/pet</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="c9bac93b-7bbc-40d8-b82c-ac159b6559aa" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder>
              <con:entry>petID</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="REST Request" id="910fd221-1c7a-4e07-812c-5668f0a7cc0b">
        <con:settings/>
        <con:config service="https://petstore.swagger.io" resourcePath="/v2/pet/{petID}" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="REST Request" id="f785dcf9-629e-46db-9c4f-8a3b0a3149dd" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://petstore.swagger.io</con:endpoint>
            <con:request/>
            <con:originalUri>https://petstore.swagger.io/v2/pet/0</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="aabc0d97-7625-45f8-aeec-ef265d6b9923" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="petID" value="0"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>petID</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:setupScript>//Setting petID
context.setProperty("petID", "1302842")

//Setting petName
context.setProperty("petName", "Timmy")</con:setupScript>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:setupScript>//remove petID
context.removeProperty("petID")

//remove petName
context.removeProperty("petName")</con:setupScript>
    <con:tearDownScript>//remove petID
context.removeProperty("petID")

//remove petName
context.removeProperty("petName")</con:tearDownScript>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
